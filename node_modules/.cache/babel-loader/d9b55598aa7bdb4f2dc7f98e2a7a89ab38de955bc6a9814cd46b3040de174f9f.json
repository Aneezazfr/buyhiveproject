{"ast":null,"code":"var _jsxFileName = \"/home/dev/project buyhive/buyhive-react-frontend/src/Components/ProductList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Products } from \"./Products\";\n// import { PostForm } from '../Posts/PostForm'\n\nimport axios from \"axios\";\nimport { ProductCard } from \"./ProductCard\";\nimport AuthContext from \"../context/productContext\";\nimport FilterContext from \"../context/FilterContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProductList = _ref => {\n  _s();\n  let {\n    setProductCount,\n    showBox,\n    showList\n  } = _ref;\n  const {\n    minPrice,\n    setMinPrice,\n    maxPrice,\n    setMaxPrice,\n    MOQ,\n    setMOQ,\n    stock_available,\n    setStockAvailable,\n    selectedCategories,\n    setSelectedCategories,\n    selectedStock,\n    setSelectedStock,\n    selectCategory,\n    setSelectCategory,\n    subCategory,\n    setSubCategory,\n    stockIn,\n    setStockIn,\n    countProduct,\n    setCountProduct,\n    query,\n    setQuery\n  } = useContext(FilterContext);\n  const [products, setProducts] = useState([]);\n  const authCxt = useContext(AuthContext);\n  useEffect(() => {\n    if (authCxt.getProducts.length <= 18 || authCxt.getProducts.length == 0) {\n      getProducts();\n    }\n    console.log(authCxt.getProducts);\n    setProductCount(authCxt.getProducts.length);\n  }, [minPrice, maxPrice, MOQ, stock_available, selectedCategories, selectedStock, selectCategory, query]);\n  useEffect(() => {\n    setProductCount(authCxt.getProducts.length);\n  });\n  const getProducts = async () => {\n    try {\n      let url = \"\";\n      console.log(\"------------------\");\n      url = `?minPrice=${minPrice}&maxPrice=${maxPrice}&MOQ=${MOQ}&stock_in_usa=${stock_available}\n               &selectedCategories=${encodeURIComponent(JSON.stringify(selectedCategories))}\n               &selectedStock=${JSON.stringify(selectedStock)}&select_categories=${encodeURIComponent(selectCategory)}&searchCategory=${subCategory}`;\n      const response = await axios.get(`http://localhost:3000/api/v1/products` + url);\n      const data = response.data;\n      console.log(\"------------------\", response);\n      if (!query) {\n        authCxt.setProducts(response.data.products);\n      } else {\n        authCxt.setProducts(response.data.products.filter(data => data.product_name.toLowerCase().includes(query.toLowerCase())));\n      }\n      setProducts(authCxt.getProducts);\n      setProductCount(authCxt.getProducts.length);\n      setStockIn(response.data.stock);\n      setCountProduct(response.data.products);\n      debugger;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: authCxt.getProducts.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [authCxt.getProducts.map(product => showBox ? /*#__PURE__*/_jsxDEV(Products, {\n          product_name: product.product_name,\n          images: product.images,\n          stock_in_USA: product.stock_in_USA,\n          minimum_order_quantity: product.minimum_order_quantity,\n          price: product.price,\n          product_certification: product.product_certification,\n          stock_in: product.stock_in,\n          category_name: product.category_name\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this)), authCxt.getProducts.map(product => showList ? /*#__PURE__*/_jsxDEV(ProductCard, {\n          product_name: product.product_name,\n          images: product.images,\n          stock_in_USA: product.stock_in_USA,\n          minimum_order_quantity: product.minimum_order_quantity,\n          price: product.price,\n          product_certification: product.product_certification,\n          stock_in: product.stock_in,\n          category_name: product.category_name\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      style: {\n        marginTop: \"20px\"\n      },\n      children: \"No Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(ProductList, \"WZlRwbxXe16iB4jNl1GAVXxZ2+Y=\");\n_c = ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Products","axios","ProductCard","AuthContext","FilterContext","ProductList","setProductCount","showBox","showList","minPrice","setMinPrice","maxPrice","setMaxPrice","MOQ","setMOQ","stock_available","setStockAvailable","selectedCategories","setSelectedCategories","selectedStock","setSelectedStock","selectCategory","setSelectCategory","subCategory","setSubCategory","stockIn","setStockIn","countProduct","setCountProduct","query","setQuery","products","setProducts","authCxt","getProducts","length","console","log","url","encodeURIComponent","JSON","stringify","response","get","data","filter","product_name","toLowerCase","includes","stock","error","map","product","images","stock_in_USA","minimum_order_quantity","price","product_certification","stock_in","category_name","id","marginTop"],"sources":["/home/dev/project buyhive/buyhive-react-frontend/src/Components/ProductList.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Products } from \"./Products\";\n// import { PostForm } from '../Posts/PostForm'\nimport { IProduct } from \"../Types/Product\";\nimport axios from \"axios\";\nimport { ProductCard } from \"./ProductCard\";\nimport AuthContext from \"../context/productContext\";\nimport FilterContext from \"../context/FilterContext\";\nexport interface IProductListProps {\n  setProductCount: (arg: number) => void;\n  showBox: boolean;\n  showList: boolean;\n}\nexport const ProductList: React.FC<IProductListProps> = ({\n  setProductCount,\n  showBox,\n  showList,\n}) => {\n  const {\n    minPrice,\n    setMinPrice,\n    maxPrice,\n    setMaxPrice,\n    MOQ,\n    setMOQ,\n    stock_available,\n    setStockAvailable,\n    selectedCategories,\n    setSelectedCategories,\n    selectedStock,\n    setSelectedStock,\n    selectCategory,\n    setSelectCategory,\n    subCategory,\n    setSubCategory,\n    stockIn,\n    setStockIn,\n    countProduct,\n    setCountProduct,\n    query,\n    setQuery,\n  } = useContext(FilterContext);\n\n  const [products, setProducts] = useState<IProduct[]>([]);\n\n  const authCxt = useContext(AuthContext);\n  \n  useEffect(() => {\n    if (authCxt.getProducts.length <= 18 || authCxt.getProducts.length == 0) {\n      getProducts();\n    }\n    console.log(\n      authCxt.getProducts,\n    );\n    setProductCount(authCxt.getProducts.length);\n  }, [\n    minPrice,\n    maxPrice,\n    MOQ,\n    stock_available,\n    selectedCategories,\n    selectedStock,\n    selectCategory,\n    query,\n  ]);\n\n  useEffect(() => {\n    setProductCount(authCxt.getProducts.length);\n  });\n\n  const getProducts = async () => {\n    try {\n      let url = \"\";\n\n      console.log(\"------------------\");\n      url = `?minPrice=${minPrice}&maxPrice=${maxPrice}&MOQ=${MOQ}&stock_in_usa=${stock_available}\n               &selectedCategories=${encodeURIComponent(\n                 JSON.stringify(selectedCategories)\n               )}\n               &selectedStock=${JSON.stringify(\n                 selectedStock\n               )}&select_categories=${encodeURIComponent(\n                selectCategory\n              )}&searchCategory=${subCategory}`;\n\n      const response = await axios.get(\n        `http://localhost:3000/api/v1/products` + url\n      );\n      const data = response.data;\n      console.log(\"------------------\", response);\n\n      if (!query) {\n        authCxt.setProducts(response.data.products);\n      } else {\n        authCxt.setProducts(\n          response.data.products.filter((data: any) =>\n            data.product_name.toLowerCase().includes(query.toLowerCase())\n          )\n        );\n      }\n      setProducts(authCxt.getProducts);\n      setProductCount(authCxt.getProducts.length);\n      setStockIn(response.data.stock);\n      setCountProduct(response.data.products);\n      debugger\n      \n    } catch (error: any) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      {authCxt.getProducts.length !== 0 ? (\n        <>\n          <h1></h1>\n          <div className=\"row\">\n            {authCxt.getProducts.map((product: IProduct) =>\n              showBox ? (\n                <Products\n                  key={product.id}\n                  product_name={product.product_name}\n                  images={product.images}\n                  stock_in_USA={product.stock_in_USA}\n                  minimum_order_quantity={product.minimum_order_quantity}\n                  price={product.price}\n                  product_certification={product.product_certification}\n                  stock_in={product.stock_in}\n                  category_name={product.category_name}\n                />\n              ) : (\n                <div></div>\n              )\n            )}\n            {authCxt.getProducts.map((product: IProduct) =>\n              showList ? (\n                <ProductCard\n                  key={product.id}\n                  product_name={product.product_name}\n                  images={product.images}\n                  stock_in_USA={product.stock_in_USA}\n                  minimum_order_quantity={product.minimum_order_quantity}\n                  price={product.price}\n                  product_certification={product.product_certification}\n                  stock_in={product.stock_in}\n                  category_name={product.category_name}\n                />\n              ) : (\n                <div></div>\n              )\n            )}\n          </div>\n        </>\n      ) : (\n        <h3 className=\"text-center\" style={{marginTop: \"20px\"}}>No Products</h3>\n      )}\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,QAAQ,QAAQ,YAAY;AACrC;;AAEA,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,aAAa,MAAM,0BAA0B;AAAC;AAAA;AAMrD,OAAO,MAAMC,WAAwC,GAAG,QAIlD;EAAA;EAAA,IAJmD;IACvDC,eAAe;IACfC,OAAO;IACPC;EACF,CAAC;EACC,MAAM;IACJC,QAAQ;IACRC,WAAW;IACXC,QAAQ;IACRC,WAAW;IACXC,GAAG;IACHC,MAAM;IACNC,eAAe;IACfC,iBAAiB;IACjBC,kBAAkB;IAClBC,qBAAqB;IACrBC,aAAa;IACbC,gBAAgB;IAChBC,cAAc;IACdC,iBAAiB;IACjBC,WAAW;IACXC,cAAc;IACdC,OAAO;IACPC,UAAU;IACVC,YAAY;IACZC,eAAe;IACfC,KAAK;IACLC;EACF,CAAC,GAAG/B,UAAU,CAACK,aAAa,CAAC;EAE7B,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAGnC,QAAQ,CAAa,EAAE,CAAC;EAExD,MAAMoC,OAAO,GAAGlC,UAAU,CAACI,WAAW,CAAC;EAEvCL,SAAS,CAAC,MAAM;IACd,IAAImC,OAAO,CAACC,WAAW,CAACC,MAAM,IAAI,EAAE,IAAIF,OAAO,CAACC,WAAW,CAACC,MAAM,IAAI,CAAC,EAAE;MACvED,WAAW,EAAE;IACf;IACAE,OAAO,CAACC,GAAG,CACTJ,OAAO,CAACC,WAAW,CACpB;IACD5B,eAAe,CAAC2B,OAAO,CAACC,WAAW,CAACC,MAAM,CAAC;EAC7C,CAAC,EAAE,CACD1B,QAAQ,EACRE,QAAQ,EACRE,GAAG,EACHE,eAAe,EACfE,kBAAkB,EAClBE,aAAa,EACbE,cAAc,EACdQ,KAAK,CACN,CAAC;EAEF/B,SAAS,CAAC,MAAM;IACdQ,eAAe,CAAC2B,OAAO,CAACC,WAAW,CAACC,MAAM,CAAC;EAC7C,CAAC,CAAC;EAEF,MAAMD,WAAW,GAAG,YAAY;IAC9B,IAAI;MACF,IAAII,GAAG,GAAG,EAAE;MAEZF,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjCC,GAAG,GAAI,aAAY7B,QAAS,aAAYE,QAAS,QAAOE,GAAI,iBAAgBE,eAAgB;AAClG,qCAAqCwB,kBAAkB,CACtCC,IAAI,CAACC,SAAS,CAACxB,kBAAkB,CAAC,CAClC;AACjB,gCAAgCuB,IAAI,CAACC,SAAS,CAC7BtB,aAAa,CACb,sBAAqBoB,kBAAkB,CACxClB,cAAc,CACd,mBAAkBE,WAAY,EAAC;MAEzC,MAAMmB,QAAQ,GAAG,MAAMzC,KAAK,CAAC0C,GAAG,CAC7B,uCAAsC,GAAGL,GAAG,CAC9C;MACD,MAAMM,IAAI,GAAGF,QAAQ,CAACE,IAAI;MAC1BR,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEK,QAAQ,CAAC;MAE3C,IAAI,CAACb,KAAK,EAAE;QACVI,OAAO,CAACD,WAAW,CAACU,QAAQ,CAACE,IAAI,CAACb,QAAQ,CAAC;MAC7C,CAAC,MAAM;QACLE,OAAO,CAACD,WAAW,CACjBU,QAAQ,CAACE,IAAI,CAACb,QAAQ,CAACc,MAAM,CAAED,IAAS,IACtCA,IAAI,CAACE,YAAY,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACnB,KAAK,CAACkB,WAAW,EAAE,CAAC,CAC9D,CACF;MACH;MACAf,WAAW,CAACC,OAAO,CAACC,WAAW,CAAC;MAChC5B,eAAe,CAAC2B,OAAO,CAACC,WAAW,CAACC,MAAM,CAAC;MAC3CT,UAAU,CAACgB,QAAQ,CAACE,IAAI,CAACK,KAAK,CAAC;MAC/BrB,eAAe,CAACc,QAAQ,CAACE,IAAI,CAACb,QAAQ,CAAC;MACvC;IAEF,CAAC,CAAC,OAAOmB,KAAU,EAAE;MACnBd,OAAO,CAACC,GAAG,CAACa,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACE;IAAA,UACGjB,OAAO,CAACC,WAAW,CAACC,MAAM,KAAK,CAAC,gBAC/B;MAAA,wBACE;QAAA;QAAA;QAAA;MAAA,QAAS,eACT;QAAK,SAAS,EAAC,KAAK;QAAA,WACjBF,OAAO,CAACC,WAAW,CAACiB,GAAG,CAAEC,OAAiB,IACzC7C,OAAO,gBACL,QAAC,QAAQ;UAEP,YAAY,EAAE6C,OAAO,CAACN,YAAa;UACnC,MAAM,EAAEM,OAAO,CAACC,MAAO;UACvB,YAAY,EAAED,OAAO,CAACE,YAAa;UACnC,sBAAsB,EAAEF,OAAO,CAACG,sBAAuB;UACvD,KAAK,EAAEH,OAAO,CAACI,KAAM;UACrB,qBAAqB,EAAEJ,OAAO,CAACK,qBAAsB;UACrD,QAAQ,EAAEL,OAAO,CAACM,QAAS;UAC3B,aAAa,EAAEN,OAAO,CAACO;QAAc,GARhCP,OAAO,CAACQ,EAAE;UAAA;UAAA;UAAA;QAAA,QASf,gBAEF;UAAA;UAAA;UAAA;QAAA,QACD,CACF,EACA3B,OAAO,CAACC,WAAW,CAACiB,GAAG,CAAEC,OAAiB,IACzC5C,QAAQ,gBACN,QAAC,WAAW;UAEV,YAAY,EAAE4C,OAAO,CAACN,YAAa;UACnC,MAAM,EAAEM,OAAO,CAACC,MAAO;UACvB,YAAY,EAAED,OAAO,CAACE,YAAa;UACnC,sBAAsB,EAAEF,OAAO,CAACG,sBAAuB;UACvD,KAAK,EAAEH,OAAO,CAACI,KAAM;UACrB,qBAAqB,EAAEJ,OAAO,CAACK,qBAAsB;UACrD,QAAQ,EAAEL,OAAO,CAACM,QAAS;UAC3B,aAAa,EAAEN,OAAO,CAACO;QAAc,GARhCP,OAAO,CAACQ,EAAE;UAAA;UAAA;UAAA;QAAA,QASf,gBAEF;UAAA;UAAA;UAAA;QAAA,QACD,CACF;MAAA;QAAA;QAAA;QAAA;MAAA,QACG;IAAA,gBACL,gBAEH;MAAI,SAAS,EAAC,aAAa;MAAC,KAAK,EAAE;QAACC,SAAS,EAAE;MAAM,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EACxD,iBACA;AAEP,CAAC;AAAC,GAjJWxD,WAAwC;AAAA,KAAxCA,WAAwC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}